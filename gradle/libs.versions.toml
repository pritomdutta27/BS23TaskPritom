[versions]
agp = "8.9.2"
coreTesting = "2.2.0"
kotlin = "2.1.10"
coreKtx = "1.16.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.10.1"
composeBom = "2025.04.01"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.10.1"
constraintlayout = "2.2.1"
lifecycle = "2.8.7"
lifecycle-viewmodel-ktx = "2.8.7"
navigation-fragment-ktx = "2.7.7"
navigation-ui-ktx = "2.8.9"
viewbinding = "8.9.2"
turbine = "1.1.0"


okhttp = "4.11.0"
loggingInterceptor = "3.1.0"
retrofit = "2.9.0"
coroutines = "1.10.1"
rxAndroid = "3.0.0"
rxJavaVersion = "3.1.0"
ksp = "2.1.20-2.0.0"
kotlinx-serialization-verison = "1.6.2"
kotlinPlugin = "1.8.10"
coilCompose = "3.1.0"
hiltNavigationCompose = "1.2.0"

#Glide
glide = "4.16.0"
#hilt
hilt-version = "2.56.1"
sdpssp = "1.0.6"

#testing
mockWebServer = "4.9.1"
mockito = "3.8.0"
assertj = "3.20.2"
materialVersion = "1.12.0"


[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigationCompose" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigation-ui-ktx" }
androidx-navigation-compose= { module = "androidx.navigation:navigation-compose", version.ref = "navigation-ui-ktx" }

lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel-ktx" }
navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigation-ui-ktx" }

# DI
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt-version" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt-version" }
hilt-android-gradlePlugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt-version" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt-version" }

#Glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
#glide-ksp = {module = "com.github.bumptech.glide:compiler", version.ref = "glide"}
glide-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coilCompose" }

#Dimension
sdp = { module = "com.intuit.sdp:sdp-android", name = "sdp", version.ref = "sdpssp" }
ssp = { module = "com.intuit.ssp:ssp-android", name = "ssp", version.ref = "sdpssp" }
androidx-viewbinding = { group = "androidx.databinding", name = "viewbinding", version.ref = "viewbinding" }

#coroutines
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
rxjava = "com.squareup.retrofit2:adapter-rxjava:2.0.2"
rxAndroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxAndroid" }

#LifeCycle
lifecycle-livedataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-runtimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
#Okhttp
#okhttp-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.github.ihsanbal:LoggingInterceptor", version.ref = "okhttp" }
timber = "com.jakewharton.timber:timber:5.0.1"

#retrofit
retrofit-gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
okhttp-interceptor = { module = "com.github.ihsanbal:LoggingInterceptor", version.ref = "loggingInterceptor" }
gson-gson = "com.google.code.gson:gson:2.11.0"
#retrofit-r-adapter = { module = "com.squareup.retrofit2:adapter-rxjava3", version.ref = "rxJavaVersion" }
#kotlinx-serialization
#kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-verison" }

retrofit-moshi-converter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

#testing
test_mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockWebServer" }
test_mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
test_mockitoAndroid = { module = "org.mockito:mockito-android", version.ref = "mockito" }
test_assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
material = { group = "com.google.android.material", name = "material", version.ref = "materialVersion" }

#testing
test_coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test_flow_turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt-version" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinx-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlinPlugin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
navigation-safeargs = { id = "androidx.navigation.safeargs", version.ref = "navigation-ui-ktx" }


[bundles]
networking = ["gson-gson", "retrofit-gsonConverter",
    "retrofit-retrofit", "rxjava", "rxAndroid", "retrofit-moshi-converter"]
coil = ["coil-compose", "coil-network-okhttp"]